<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd 
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd">

	<mvc:annotation-driven /> 
	<!-- package 이름이 ezen 으로 시작하는 컨드롤러들만 스캔한다. 
	이유는 흔한개발자에서 sevlet-context와 root-context의 차이를 볼것 
    그리고 나서 인터셉터를 활용해서 로그를 적용하는 과정. -->
	<context:component-scan base-package="ezen"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean id="loggerInterceptor"
				class="ezen.nnb.common.LoggerInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- LoggerAspect라는 클래스는 Controller, Service, DAO가 실행될 때, 어떤 계층의 어떤 메서드가 
		실행되었는지를 보여주는 역할을 한다. -->
	<aop:aspectj-autoproxy />
	<bean id="loggerAspect" class="ezen.nnb.common.LoggerAspect" />


	<!-- 빈 객체를 사용하는 대신에 맵을 활용해서 파라미터를 수정 추가 등록하는 작업을 하기 위해서 추가 -->
	<mvc:annotation-driven>
		<mvc:argument-resolvers>
			<bean class="ezen.nnb.common.CustomMapArgumentResolver"></bean>
		</mvc:argument-resolvers>
	</mvc:annotation-driven>


	<!-- @RequestMapping 어노테이션을 활용하여 컨트롤러를 사용하기 위해 빈 추가 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

	<!-- 컨트롤러에서 리턴 받은 뷰의 이름과 빈에 등록되어 있는 id의 값이 같은것을 찾아 실행 시킨다 -->
	<bean
		class="org.springframework.web.servlet.view.BeanNameViewResolver"
		p:order="0" />

	<!-- 컨트롤러가 리턴한 객체의 내용을 분석하여 JSON포맷으로 변환. 빼도될듯? -->
	<bean id="jsonView"
		class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />

	<!-- 컨트롤러에서 jsp 맵핑 설정 Mapandview 객체를 리턴 받았을 때 이게돌겠찡? -->
	<bean
		class="org.springframework.web.servlet.view.UrlBasedViewResolver"
		p:order="1"
		p:viewClass="org.springframework.web.servlet.view.JstlView"
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp">
	</bean>
	
	 <bean id="mailSender" class = "org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="smtp.gmail.com" />
      <property name="port" value="587" />
      <property name="username" value="ezenyoon@gmail.com" />
      <property name="password" value="ezanacademy@" />
    
      <property name="javaMailProperties">
         <props>
               <prop key="mail.transport.protocol">smtp</prop>
               <prop key="mail.smtp.auth">true</prop>
               <prop key="mail.smtp.starttls.enable">true</prop>
               <prop key="mail.debug">true</prop>
         </props>
      </property>
    </bean>
	
	
	
</beans>
